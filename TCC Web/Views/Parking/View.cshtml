@using TCC_Web.Models.DTOs.Parking;
@using TCC_Web.Models.Enums.Base;

@{
    ViewData["Title"] = "Visualização do Estacionamento";
}

@model ParkingDetailedDTO

@{
    var pageShortTitle = Model.Name;
    var pageFullTitle = string.Format("{0}: {1}", "Estacionamento", pageShortTitle);

    ViewBag.Title = pageFullTitle;

    int leftCount = 75;
    int rightCount = 75;
    List<VacancyBasicDTO> leftVcancies = new List<VacancyBasicDTO>();
    List<VacancyBasicDTO> rightVcancies = new List<VacancyBasicDTO>();
    var halfVacancy = Model.Vacancies.Count() / 2;
    leftVcancies = Model.Vacancies.OrderBy(e => e.Id).Take(halfVacancy).ToList();
    rightVcancies = Model.Vacancies.OrderBy(e => e.Id).Skip(halfVacancy).ToList();
}

<div class="wrapper wrapper-content animated fadeInUp">
    <div class="row">
        <div class="col-lg-12 mb-5">
            <h5>@pageFullTitle</h5>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-4 mb-5">
            <div class="col-md-12">
                <div class="form-group">
                    <label>Nome:</label>
                    @Model.Name
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <label>CEP:</label>
                    @Model.PostalCode
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <label>Pais:</label>
                    @Model.CountryName
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <label>Estado:</label>
                    @Model.StateName
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <label>Cidade:</label>
                    @Model.CityName
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <label>Bairro:</label>
                    @Model.NeighborhoodName
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <label>Endereço:</label>
                    @string.Format("{0}, {1}", Model.Address, Model.AddressNumber)
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <label>Complemento:</label>
                    @Model.AddressComplement
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <label>Latitude:</label>
                    @Model.Latitude.ToString()
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <label>Longitude:</label>
                    @Model.Longitude.ToString()
                </div>
            </div>
            <div class="col-md-12">
                <div class="form-group">
                    <label>Tipo do estacionamento:</label>
                    @Model.LocationType.ToString()
                </div>
            </div>
        </div>
        @if (Model.SystemStatus == SystemStatusType.Active)
        {
            <div class="col-md-8 align-content-center">

                <svg width="550" height="550">
                    <!-- Coluna de frente 1 -->
                    <g transform="translate(100, 0)">
                        @foreach (var vacancy in leftVcancies)
                        {
                            <rect x="-30" y="@leftCount" width="100" height="50" fill="@(vacancy.Busy ? "red" : "green")" stroke="black" stroke-width="2" transform="rotate(35, 50, @(leftCount - 50))" />
                            leftCount += 100;
                        }

                    </g>
                    <!-- Coluna de costas 1 -->
                    <g transform="translate(400, 0)">
                        @foreach (var vacancy in rightVcancies)
                        {
                            <rect x="-30" y="@rightCount" width="100" height="50" fill="@(vacancy.Busy ? "red" : "green" )" stroke="black" stroke-width="2" transform="rotate(35, 50, @rightCount)" />
                            rightCount += 100;
                        }

                    </g>
                    <!-- Rua -->
                    <rect x="200" y="0" width="100" height="550" fill="gray" />
                </svg>
            </div>
        }
    </div>
</div>
<script>
    setInterval(function(){
        location.reload();
    }, 5000);
</script>